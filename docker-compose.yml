x-source-files: &source-files
  - ./.editorconfig:/app/.editorconfig
  - ./.eslintignore:/app/.eslintignore
  - ./.eslintrc.yaml:/app/.eslintrc.yaml
  - ./apps/:/app/apps/
  - ./libs/:/app/libs/
  - ./node_modules/:/app/node_modules/
  - ./nx.json:/app/nx.json
  - ./package.json:/app/package.json
  - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
  - ./tools/:/app/tools/
  - ./tsconfig.base.json:/app/tsconfig.base.json

networks:
  databases:

volumes:
  postgres-data:

services:
  # Infrastructure
  traefik:
    image: traefik:2.8
    restart: on-failure
    ports:
      - 80:80
      - 443:443

    volumes:
      - ./docker/config/traefik:/etc/traefik:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true

      - traefik.http.routers.dashboard.rule=Host(`kickflip-workspace.dev`)
      - traefik.http.routers.dashboard.tls=true
      - traefik.http.routers.dashboard.service=api@internal

  postgres:
    image: postgres:15-alpine
    restart: on-failure
    ports:
      - 5432:5432
    networks:
      - databases
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: secret


  kickflip-api:
    image: kickflip-workspace-dev
    restart: on-failure
    build:
      dockerfile: Dockerfile
      context: .
    working_dir: /app
    command: pnpm exec nx serve kickflip-api
    volumes: *source-files
    networks:
      - databases
    depends_on:
      - postgres
      - traefik
    expose:
      - 8080
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0

      ENVIRONMENT: development

      LOGGER_LEVEL: info

      SERVER_PORT: 8080
      SERVER_CORS: https://kickflip.kickflip-workspace.dev

      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: secret
      DB_DATABASE: kickflip
    labels:
      - traefik.enable=true
      - traefik.http.routers.kickflip-api-proxy.rule=Host(`api-kickflip.kickflip-workspace.dev`)
      - traefik.http.routers.kickflip-api-proxy.tls=true
      - traefik.http.services.kickflip-api-proxy.loadbalancer.server.port=8080

  